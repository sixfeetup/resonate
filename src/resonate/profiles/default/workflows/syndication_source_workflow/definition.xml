<?xml version="1.0"?>
<dc-workflow
    workflow_id="syndication_source_workflow"
    title="Syndication Source Workflow"
    description="A workflow for syndicating content between sites"
    state_variable="syndication_state" initial_state="not_syndicated">

  <state state_id="not_syndicated" title="Not syndicated">
    <description>
      Not syndicated to any sites
    </description>
    <exit-transition transition_id="request_syndication"/>
  </state>
  <state state_id="pending_syndication" title="Pending Syndication">
    <description>
      Waiting to be reviewed for syndication to another site
    </description>
    <exit-transition transition_id="request_syndication"/>
    <exit-transition transition_id="review_syndication" />
    <exit-transition transition_id="accept_syndication" />
    <exit-transition transition_id="reject_syndication" />
  </state>
  <state state_id="syndicated" title="Syndicated">
    <description>
      Syndicated to one or more sites
    </description>
    <exit-transition transition_id="request_syndication"/>
    <exit-transition transition_id="reject_syndication"/>
  </state>

  <transition
      transition_id="request_syndication"
      title="Member submits content for syndication to a site"
      new_state="pending_syndication" trigger="USER"
      before_script="" after_script="">
    <description>
      A member selects a target site and submits this content for review to be
      syndicated to that site.
    </description>
    <action
	url="%(content_url)s/@@select-organizations?transition=request_syndication"
	category="workflow" icon="">
      Request syndication
    </action>
    <guard>
      <guard-permission>Request review</guard-permission>
    </guard>
  </transition>
  <transition
      transition_id="review_syndication"
      title="Reviewer responds to syndication request"
      new_state="" trigger="USER"
      before_script="" after_script="">
    <description>
      A reviewer accepts or rejects the request for this content to be
      syndicated to a site.
    </description>
    <guard>
      <guard-permission>Review portal content</guard-permission>
    </guard>
  </transition>
  <transition
      transition_id="accept_syndication"
      title="Reviewer accepts syndication"
      new_state="syndicated" trigger="AUTOMATIC"
      before_script="" after_script="">
    <description>
      A reviewer accepts the request for this content to be syndicated to a
      site.
    </description>
    <guard>
      <guard-permission>Review portal content</guard-permission>
      <guard-expression>
	object/@@syndication-status/is_syndication_accepted
      </guard-expression>
    </guard>
  </transition>
  <transition
      transition_id="reject_syndication"
      title="Reviewer rejects syndication"
      new_state="not_syndicated" trigger="AUTOMATIC"
      before_script="" after_script="">
    <description>
      A reviewer rejects the request for this content to be syndicated to a
      site.
    </description>
    <guard>
      <guard-permission>Review portal content</guard-permission>
      <guard-expression>
	object/@@syndication-status/is_syndication_rejected
      </guard-expression>
    </guard>
  </transition>

  <variable
      variable_id="action" for_catalog="False" for_status="True"
      update_always="True">
    <description>Previous transition</description>
    <default>
      <expression>transition/getId|nothing</expression>
    </default>
    <guard>
    </guard>
  </variable>
  <variable
      variable_id="actor" for_catalog="False" for_status="True"
      update_always="True">
    <description>
      The ID of the user who performed the previous transition
    </description>
    <default>
      <expression>user/getId</expression>
    </default>
    <guard>
    </guard>
  </variable>
  <variable
      variable_id="comments" for_catalog="False" for_status="True"
      update_always="True">
    <description>Comment about the last transition</description>
    <default>
      <expression>python:state_change.kwargs.get('comment', '')</expression>
    </default>
    <guard>
    </guard>
  </variable>
  <variable
      variable_id="review_history" for_catalog="False" for_status="False"
      update_always="False">
    <description>Provides access to workflow history</description>
    <default>
      <expression>state_change/getHistory</expression>
    </default>
    <guard>
      <guard-permission>Request review</guard-permission>
      <guard-permission>Review portal content</guard-permission>
    </guard>
  </variable>
  <variable
      variable_id="time" for_catalog="False" for_status="True"
      update_always="True">
    <description>When the previous transition was performed</description>
    <default>
      <expression>state_change/getDateTime</expression>
    </default>
    <guard>
    </guard>
  </variable>
  <variable
      variable_id="organizations" for_catalog="False" for_status="True"
      update_always="True">
    <default>
      <expression>
	python:state_change.kwargs.get('organizations', '')
      </expression>
    </default>
    <guard>
    </guard>
  </variable>
</dc-workflow>
